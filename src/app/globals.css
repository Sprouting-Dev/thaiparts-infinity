/* Tailwind v4 entry - import preflight (reset) and utilities */
@import 'tailwindcss';

:root {
  /* Colors */
  --color-primary: #1063a7;
  --color-accent: #e92928;
  --color-secondary: #f5f5f5;
  --color-background: #f5f5f5;
  --color-foreground: #333333;
  --color-muted: #d9d9d9;

  /* Decoration colors for Tailwind */
  --color-decoration-accent: var(--color-accent);

  /* Fonts */
  --font-sans:
    'Kanit', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue',
    Arial;

  /* Spacing */
  --space-4: 1rem;
  --space-6: 1.5rem;
  --space-8: 2rem;

  /* Radii */
  --radius-pill: 100px;

  /* Design tokens (brand tokens exposed as CSS variables) */
  --brand-blue: #1063a7;
  --brand-blue-rgb: 16, 99, 167;
  --accent-red: #e92928;
  --accent-red-rgb: 233, 41, 40;

  --blue-bg: #d7f5ff;
  --teal-bg: #d7ffff;
  --red-bg: #ffd7d7;
  --navy-bg: #d5ecff;
  --green-bg: #e7ffd5;
  --green-alt-bg: #f7ffe8;
  --orange-bg: #fff8e6;
  --gray-bg: #d5ecff;
  --red-alt-bg: #ffd6d5;

  --teal-text: #008080;
  --green-text: #629938;
  --green-alt-text: #99cc33;
  --orange-text: #ffb600;
  --gray-text: #4a6f9e;
  --blue-text: #007aa3;

  /* Gradient start token used in a few places */
  --gradient-start: #cce8ff;
}

@media (prefers-color-scheme: light) {
  :root {
    --color-background: #f5f5f5;
    --color-foreground: #333333;
  }
}

body {
  background: var(--color-background);
  color: var(--color-foreground);
  font-family: var(--font-sans);
  margin: 0;
}

/* Reusable constrained content container (Figma spec: 970px) */
.container-970 {
  width: 100%;
  max-width: 970px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem; /* gutter similar to px-4 */
  padding-right: 1rem;
}

/* Force responsive sizing and include padding in width calc so container
   does not overflow on small screens. */
.container-970,
.embla {
  box-sizing: border-box;
  width: 100%;
  max-width: 970px;
}

/* Gentle transition for layout / color changes */
.smooth-transition {
  transition: all 180ms ease;
}

/* Example utility alias using tokens */
.bg-app {
  background-color: var(--color-background);
}

/* Small utility aliases so existing classNames work without a Tailwind config */
.text-primary {
  color: var(--color-primary);
}
.text-accent {
  color: var(--color-accent);
}
.text-secondary {
  /* use the token for 'secondary' (light) text, e.g. on dark hero backgrounds */
  color: var(--color-secondary);
}
.font-kanit {
  font-family: var(--font-sans);
}

/* Brand named utilities (explicit classes so we avoid depending on Tailwind generating
   arbitrary [#hex] utilities). These map to the CSS variables defined above. */
.bg-brand-blue-light {
  background-color: var(--blue-bg);
}
/* Brand blue used for headings and prominent UI (now uses official brand token #1063A7) */
.text-brand-blue {
  color: var(--brand-blue);
}
/* Legacy badge color preserved under a new name so badges can keep the previous tone */
.text-badge-blue {
  color: var(--blue-text);
}
/* Strong brand blue utility explicitly using the brand token #1063A7 */
.text-brand-blue-strong {
  color: var(--brand-blue);
}
.bg-teal {
  background-color: var(--teal-bg);
}
.text-teal {
  color: var(--teal-text);
}
.bg-red-light {
  background-color: var(--red-bg);
}
.text-accent-red {
  color: var(--accent-red);
}
.bg-navy-light {
  background-color: var(--navy-bg);
}
.text-navy {
  color: var(--brand-blue);
}
.bg-green-light {
  background-color: var(--green-bg);
}
.text-green {
  color: var(--green-text);
}
.bg-green-alt {
  background-color: var(--green-alt-bg);
}
.text-green-alt {
  color: var(--green-alt-text);
}
.bg-orange-light {
  background-color: var(--orange-bg);
}
.text-orange {
  color: var(--orange-text);
}
.bg-gray-light {
  background-color: var(--gray-bg);
}
.text-gray {
  color: var(--gray-text);
}
.bg-red-alt {
  background-color: var(--red-alt-bg);
}
.text-red-alt {
  color: var(--accent-red);
}

/* Decoration utilities for underline */
.decoration-accent {
  text-decoration-color: var(--color-accent);
}
.decoration-2 {
  text-decoration-thickness: 2px;
}

/* Gradient border utility using pseudo-element approach */
.gradient-border-btn {
  position: relative;
  border-radius: 9999px;
  background: var(
    --border-gradient,
    linear-gradient(180deg, var(--gradient-start) 0%, var(--brand-blue) 100%)
  );
  display: flex;
  align-items: center;
  justify-content: center;
}

.gradient-border-btn::before {
  content: '';
  position: absolute;
  inset: var(--border-width, 2px);
  background: var(--btn-bg, var(--brand-blue));
  border-radius: calc(9999px - var(--border-width, 2px));
  z-index: 0;
}

/* Content should be above pseudo-element */
.gradient-border-btn > * {
  position: relative;
  z-index: 1;
}

/* Glassmorphism token used by header and dropdown to ensure exact parity */
.glass {
  background: rgba(255, 255, 255, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
  backdrop-filter: blur(8px) saturate(120%);
  -webkit-backdrop-filter: blur(8px) saturate(120%);
}

.glassinput {
  /* Use the same light glass pattern as .glass but tuned for form fields */
  background: rgba(16, 99, 167, 0.04); /* light translucent blue for inputs */
  /* Use a subtle outer shadow instead of a hard border so Tailwind's
     focus:border utilities can override the border on :focus. */
  box-shadow:
    0 0 0 1px rgba(255, 255, 255, 0.6),
    0 6px 18px rgba(16, 99, 167, 0.08);
  backdrop-filter: blur(6px) saturate(120%);
  -webkit-backdrop-filter: blur(6px) saturate(120%);
  padding: 0.75rem 1rem;
  color: var(--color-foreground);
  transition:
    box-shadow 160ms ease,
    border-color 160ms ease;
}

/* Placeholder color for glass inputs (semi-opaque dark) */
.glassinput::placeholder {
  color: #33333340; /* hex with alpha (approx rgba(51,51,51,0.25)) */
}
.glassinput::-webkit-input-placeholder {
  color: #33333340;
}
.glassinput:-ms-input-placeholder {
  color: #33333340;
}

/* Embla minimal styles for autoplaying carousel */
.embla {
  max-width: 100%;
  margin: 0 auto;
  /* explicit icon size and spacing for the clients logos carousel */
  --slide-size: 64px;
  /* default gap (mobile) â€” tuned per breakpoint below */
  --slide-spacing: 12px;
}

.embla__viewport {
  overflow: hidden;
  width: 100%;
}

.embla__container {
  display: flex;
  touch-action: pan-y pinch-zoom;
  /* Use per-slide margin instead of gap to make spacing consistent even when
     Embla clones/loops slides. */
  gap: 0;
}

/* Always show 4 slides per viewport and scale the slide size by adjusting
   the --slide-spacing and image sizes per breakpoint. Using per-slide
   margin-right keeps spacing consistent across clones/loops. */
.embla__slide {
  /* 4 slides per view by default (mobile first) */
  flex: 0 0 calc((100% - (3 * var(--slide-spacing))) / 4);
  min-width: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: var(--slide-spacing);
  /* Fade-only animation: use opacity transition only */
  opacity: 0.7; /* base opacity for slides away from center (subtle fade) */
  transition: opacity 280ms ease;
  will-change: opacity;
}

/* Tablet adjustments: slightly larger spacing and icon size */
@media (min-width: 640px) {
  .embla {
    --slide-spacing: 24px;
  }
  .embla__slide {
    /* Still 4 slides per view but with larger spacing */
    flex: 0 0 calc((100% - (3 * var(--slide-spacing))) / 4);
    min-width: 48px;
  }
  .embla__slide img,
  .embla__slide picture,
  .embla__slide .image {
    width: 48px !important;
    height: 48px !important;
  }
}

/* Compensate the container padding so the viewport width doesn't grow
   (keeps visual width consistent while adding end padding for the seam). */
.embla__viewport {
  /* mobile-friendly minimum height (fits 32px icons + vertical padding) */
  min-height: 32px;
  height: auto;
}

/* Edge fade mask so overflowing slides softly fade out at left/right edges */
:root {
  --embla-edge-fade: 48px; /* default fade width */
}

.embla__viewport {
  /* prefer CSS mask; use linear-gradient mask to fade edges */
  -webkit-mask-image: linear-gradient(
    90deg,
    transparent 0px,
    black var(--embla-edge-fade),
    black calc(100% - var(--embla-edge-fade)),
    transparent 100%
  );
  mask-image: linear-gradient(
    90deg,
    transparent 0px,
    black var(--embla-edge-fade),
    black calc(100% - var(--embla-edge-fade)),
    transparent 100%
  );
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
}

/* Responsive fade width */
@media (min-width: 640px) {
  :root {
    --embla-edge-fade: 64px;
  }
}
@media (min-width: 768px) {
  :root {
    --embla-edge-fade: 96px;
  }
}

/* Fallback for browsers without mask support: pseudo-element overlay gradients */
.embla__viewport::before {
  content: '';
  pointer-events: none;
  position: absolute;
  inset: 0; /* top:0; right:0; bottom:0; left:0 */
  background:
    linear-gradient(
      90deg,
      rgba(255, 255, 255, 1) 0px,
      rgba(255, 255, 255, 0) var(--embla-edge-fade)
    ),
    linear-gradient(
      270deg,
      rgba(255, 255, 255, 1) 0px,
      rgba(255, 255, 255, 0) var(--embla-edge-fade)
    );
  background-repeat: no-repeat;
  background-position: left, right;
  background-size:
    var(--embla-edge-fade) 100%,
    var(--embla-edge-fade) 100%;
  mix-blend-mode: normal;
}

.embla__slide img,
.embla__slide picture,
.embla__slide .image {
  /* Mobile: 32x32 by default */
  width: 32px !important;
  height: 32px !important;
  display: block;
  object-fit: contain;
  margin: 0 auto;
}

/* Desktop: largest icons and spacing */
@media (min-width: 768px) {
  .embla {
    --slide-spacing: 40px; /* moderate gap for 4-up layout */
  }
  .embla__slide {
    flex: 0 0 calc((100% - (3 * var(--slide-spacing))) / 4);
    min-width: 64px;
  }
  .embla__slide img,
  .embla__slide picture,
  .embla__slide .image {
    width: 64px !important;
    height: 64px !important;
  }
}

/* Desktop: ensure viewport is taller to fit 64px icons comfortably */
@media (min-width: 768px) {
  .embla__viewport {
    min-height: 64px;
  }
}

/* Center container items vertically as well */
.embla__container {
  align-items: center;
}

/* Product description table styles */
.product-description table {
  margin-top: 32px !important;
  width: 100%;
  border-collapse: collapse;
}

.product-description td {
  padding: 12px 16px 0 0 !important;
  vertical-align: top !important;
  font-size: 1rem !important;
}

@media (min-width: 1024px) {
  .product-description td {
    font-size: 1.375rem !important;
  }
}

.product-description td:first-child {
  font-weight: 500 !important;
}

/* Rich text content styling (tables, images) used in product detail */
.richtext-content table {
  width: 100%;
  border-collapse: collapse;
}
.richtext-content td,
.richtext-content th {
  padding: 0.375rem 0.5rem;
  vertical-align: top;
}
.richtext-content td:first-child,
.richtext-content th:first-child {
  font-weight: 600; /* left column bold */
}
.richtext-content img {
  max-width: 100%;
  height: auto;
  border-radius: 0.75rem; /* 12px similar to rounded-xl */
}

/* Mobile: stack table rows so label is on top and detail below */
@media (max-width: 1023px) {
  .richtext-content table,
  .richtext-content tbody,
  .richtext-content tr,
  .richtext-content td,
  .richtext-content th {
    display: block;
    width: 100%;
  }
  .richtext-content tr {
    margin-bottom: 0.75rem;
    padding: 0.5rem 0.25rem;
    background: transparent;
  }
  .richtext-content td:first-child,
  .richtext-content th:first-child {
    padding-bottom: 0.25rem;
  }
  .richtext-content td + td,
  .richtext-content th + td {
    padding-top: 0;
  }
}
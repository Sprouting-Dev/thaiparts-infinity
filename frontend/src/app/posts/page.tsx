import { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Knowledge Center | THAIPARTS INFINITY',
  description: 'Articles and insights about industrial automation',
};

type Post = {
  id: number;
  attributes: {
    title: string;
    slug: string;
    subtitle?: string;
    body?: Array<{
      type: string;
      children?: Array<{ text: string }>;
    }>;
    thumbnail?: {
      data?: {
        attributes?: {
          url: string;
        };
      };
    };
  };
};

function getPosts(): Post[] {
  // Static posts data
  return [
    {
      id: 1,
      attributes: {
        title: "5 ‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏ú‡∏•‡∏¥‡∏ï‡∏ú‡∏• ‡∏Ñ‡∏£‡∏±‡∏ß‡∏ä‡πà‡∏≠‡∏á‡∏†‡∏≤‡∏Ñ PLC / SCADA ‡∏£‡∏ß‡∏°‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°",
        slug: "scada-plc-system",
        subtitle: "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£",
        body: [
          {
            type: "paragraph",
            children: [
              { text: "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£ ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ SCADA ‡πÅ‡∏•‡∏∞ PLC ‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö Automation ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï" }
            ]
          }
        ],
        thumbnail: undefined
      }
    },
    {
      id: 2,
      attributes: {
        title: "Case Study: ‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏°‡∏±‡∏î A ‡∏£‡∏∞‡∏ö‡∏ö Downtime ‡∏à‡∏≤‡∏Å 80 ‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡πÑ‡∏£ 10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏•‡πà‡∏ß‡∏•",
        slug: "downtime-reduction",
        subtitle: "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î Downtime",
        body: [
          {
            type: "paragraph", 
            children: [
              { text: "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏î Downtime ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏¥‡∏ï ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡πÄ‡∏´‡∏ï‡∏∏" }
            ]
          }
        ],
        thumbnail: undefined
      }
    },
    {
      id: 3,
      attributes: {
        title: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏±‡∏î ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á VFD ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏ß‡πÅ‡∏≠‡∏î‡∏à‡∏±‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå",
        slug: "vfd-electrical-system", 
        subtitle: "‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°",
        body: [
          {
            type: "paragraph",
            children: [
              { text: "‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå VFD ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô" }
            ]
          }
        ],
        thumbnail: undefined
      }
    },
    {
      id: 4,
      attributes: {
        title: "‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏ä‡∏¥‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Automation",
        slug: "preventive-maintenance-automation",
        subtitle: "Preventive Maintenance Best Practices",
        body: [
          {
            type: "paragraph",
            children: [
              { text: "‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏ä‡∏¥‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Automation ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå" }
            ]
          }
        ],
        thumbnail: undefined
      }
    }
  ];
}

export default function PostsPage() {
  const posts = getPosts();

  return (
    <div className="bg-[#F5F5F5] min-h-screen">
      <main className="w-full flex flex-col items-center pt-24">
        <div className="container-970 flex flex-col gap-8 py-8">
          {/* Header */}
          <div className="flex items-center gap-3">
            <div className="w-4 h-4 rounded-full bg-[#E92928] flex-shrink-0" />
            <h1 className="font-['Kanit'] font-medium text-[22px] leading-[33px] md:text-[28px] md:leading-[42px] text-[#1063A7]">
              ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏£‡∏ß‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç
            </h1>
          </div>

          {/* Posts Grid */}
          {posts.length > 0 ? (
            <div className="w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-7 lg:gap-8">
              {posts.map(post => {
                if (!post || !post.attributes) return null;
                const { attributes } = post as any;
                // Support both media shapes: 1) { thumbnail: { data: { attributes: { url }}} } 2) { thumbnail: { url } }
                const imageUrl =
                  attributes.thumbnail?.data?.attributes?.url ||
                  attributes.thumbnail?.url ||
                  '';
                // Body / content fallback
                const richBlocks = Array.isArray(attributes.body)
                  ? attributes.body
                  : Array.isArray(attributes.content)
                    ? attributes.content
                    : [];
                let bodyText = '';
                if (richBlocks.length) {
                  bodyText = richBlocks
                    .filter(
                      (b: any) =>
                        b && (b.type === 'paragraph' || b.type === 'text')
                    )
                    .map((b: any) =>
                      Array.isArray(b.children)
                        ? b.children
                            .map((c: any) =>
                              c && typeof c.text === 'string' ? c.text : ''
                            )
                            .join('')
                        : b.text || ''
                    )
                    .join(' ')
                    .slice(0, 150);
                }
                const description = attributes.subtitle || bodyText || '';
                return (
                  <div
                    key={post.id}
                    className="group flex flex-col gap-3 hover:transform hover:scale-[1.02] transition-all duration-200 bg-white rounded-lg shadow-lg hover:shadow-xl overflow-hidden"
                  >
                    <div className="w-full aspect-[300/220] overflow-hidden">
                      {imageUrl ? (
                        <img
                          src={
                            imageUrl.startsWith('http')
                              ? imageUrl
                              : `${process.env.NEXT_PUBLIC_STRAPI_URL || 'http://localhost:1337'}${imageUrl}`
                          }
                          alt={attributes.title}
                          className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                        />
                      ) : (
                        <div className="w-full h-full bg-gradient-to-br from-neutral-200 to-neutral-300 flex items-center justify-center">
                          <div className="text-neutral-400 text-4xl">üìÑ</div>
                        </div>
                      )}
                    </div>
                    <div className="p-6 flex flex-col gap-3 flex-grow">
                      <h3 className="font-['Kanit'] font-medium text-[20px] leading-tight text-[#333333] group-hover:text-[#1063A7] transition-colors duration-200 line-clamp-3">
                        {attributes.title}
                      </h3>
                      {description && (
                        <p className="font-['Kanit'] font-normal text-[14px] leading-relaxed text-[#666666] line-clamp-3 flex-grow">
                          {description}
                        </p>
                      )}
                    </div>
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="w-full text-center py-16">
              <p className="font-['Kanit'] text-[18px] text-[#666666]">
                ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ
              </p>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
